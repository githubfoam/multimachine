# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
$etcd1_script = <<SCRIPT
# Install Docker
sudo apt-get update
sudo apt-get remove docker docker-engine docker.io
sudo apt-get install apt-transport-https ca-certificates curl software-properties-common -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg |  sudo apt-key add -
apt-key fingerprint 0EBFCD88
sudo add-apt-repository \
"deb [arch=amd64] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) \
stable"
sudo apt-get update
sudo apt-get install -y docker-ce=5:19.03.2~3-0~ubuntu-disco docker-ce-cli=5:19.03.2~3-0~ubuntu-disco containerd.io
sudo usermod -aG docker vagrant
sudo service docker start
docker --version
hostnamectl status
SCRIPT
auto = ENV['AUTO_START_SWARM'] || true # create swarm auto mode
multi_manager =  true # create swarm multi manager mode
numworkers = 2
vmmemory = 512
numcpu = 1
instances = []
(1..numworkers).each do |n|
  instances.push({:name => "worker#{n}", :ip => "192.168.10.5#{n+2}"})
end
manager_ip = "192.168.10.40"
File.open("./hosts", 'w') { |file|
  instances.each do |i|
    file.write("#{i[:ip]} #{i[:name]}.local #{i[:name]}\n")
  end
  file.write("#{manager_ip} manager.local manager\n")
}


# Vagrant version requirement
Vagrant.require_version ">= 1.8.4"
Vagrant.configure("2") do |config|

    config.vm.provider "virtualbox" do |v|
     	v.memory = vmmemory
  	  v.cpus = numcpu
      v.customize ["modifyvm", :id, "--groups", "/swarm-ubuntu-sandbox"] # create vbox group
    end

    config.vm.define "manager" do |i|
      i.vm.box = "bento/ubuntu-19.04"
      i.vm.hostname = "manager"
      i.vm.network "private_network", ip: "#{manager_ip}"
      i.vm.provision "shell", inline: $etcd1_script, privileged: false
      if File.file?("./hosts")
        i.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
        i.vm.provision "shell", inline: "cat /tmp/hosts >> /etc/hosts", privileged: true
      end
      if auto
        i.vm.provision "shell", inline: "docker swarm init --advertise-addr #{manager_ip}"
        i.vm.provision "shell", inline: "docker swarm join-token -q worker > /vagrant/worker_token"
        i.vm.provision "shell", inline: "docker swarm join-token -q manager > /vagrant/manager_token"
      end
    end

     if multi_manager == true
        nummanagers = 1 # of extra managers
        instances_managers = []

        (1..nummanagers).each do |m|
          instances_managers.push({:name => "manager#{m}", :ip => "192.168.10.4#{m+2}"})
        end # (1..nummanagers)
        File.open('./hosts', 'a'){ |file|
          instances_managers.each do |i|
            file.write("#{i[:ip]} #{i[:name]}.local #{i[:name]}\n")
          end
        } # File.open("./hosts", 'w')

        instances_managers.each do |instancemgr|
                config.vm.define instancemgr[:name] do |i|
                  i.vm.box = "bento/ubuntu-19.04"
                  i.vm.hostname = instancemgr[:name]
                  i.vm.network "private_network", ip: "#{instancemgr[:ip]}"
                  i.vm.provision "shell", inline: $etcd1_script, privileged: false

                  if File.file?("./hosts")
                    i.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
                    i.vm.provision "shell", inline: "cat /tmp/hosts >> /etc/hosts", privileged: true
                  end # if File.file?("./hosts")

                  if auto
                    # i.vm.provision "shell", inline: "docker swarm join --advertise-addr #{instance[:ip]} --listen-addr #{instance[:ip]}:2377 --token `cat /vagrant/token` #{manager_ip}:2377"
                    i.vm.provision "shell", inline: "docker swarm join --token `cat /vagrant/manager_token` #{manager_ip}:2377"
                  end # if auto

                end
        end # instances_managers.eac
     end # if multi_manager


      instances.each do |instance|
      config.vm.define instance[:name] do |i|
        i.vm.box = "bento/ubuntu-19.04"
        i.vm.hostname = instance[:name]
        i.vm.network "private_network", ip: "#{instance[:ip]}"
        i.vm.provision "shell", inline: $etcd1_script, privileged: false
          if File.file?("./hosts")
            i.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
            i.vm.provision "shell", inline: "cat /tmp/hosts >> /etc/hosts", privileged: true
          end
          if auto
            i.vm.provision "shell", inline: "docker swarm join --advertise-addr #{instance[:ip]} --listen-addr #{instance[:ip]}:2377 --token `cat /vagrant/worker_token` #{manager_ip}:2377"
          end
      end
     end

end
